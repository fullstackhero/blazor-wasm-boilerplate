@inject Microsoft.Extensions.Localization.IStringLocalizer<ForgotPassword> L

<EditForm Model="@_forgotPasswordRequest" OnValidSubmit="SubmitAsync">

     <MudCard Elevation="25">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText>@L["Forgot Password"]</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudGrid>
                <DataAnnotationsValidator />
                <CustomValidation @ref="_customValidation" />
                <MudItem xs="12">
                    <MudTextField T="string" Label="E-mail" Variant="Variant.Outlined"
                                  @bind-Value="_forgotPasswordRequest.Email"
                                  For="@(() => _forgotPasswordRequest.Email)"
                                  InputType="InputType.Email" Adornment="Adornment.End"/>
                </MudItem>
            </MudGrid>
        </MudCardContent>
        <MudCardActions Class="pb-4 pl-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit" Class="ml-auto">
                @L["Forgot Password"]</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>
@code {
    private ForgotPasswordRequest? _forgotPasswordRequest = new ForgotPasswordRequest();
    public bool BusySubmitting { get; set; } = false;
    private CustomValidation? _customValidation;
    [Inject]
    public IIdentityClient _IdentityClient { get; set; } = default!;
    private async Task SubmitAsync()
    {
        BusySubmitting = true;
        await ApiHelper.ExecuteCallGuardedAsync(
            () => _IdentityClient.ForgotPasswordAsync(_forgotPasswordRequest),
            _snackBar,
            _customValidation);
        

        BusySubmitting = false;
    }

}